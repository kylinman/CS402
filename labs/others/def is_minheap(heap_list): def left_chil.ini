def is_minheap(heap_list): def left_child_index(index): return 2 * index + 1 def right_child_index(index): return 2 * index + 2 def is_valid_minheap(index): left_index = left_child_index(index) right_index = right_child_index(index) # 如果左子节点的索引超出了列表范围，说明当前节点是叶子节点，满足最小堆条件 if left_index >= len(heap_list): return True # 如果右子节点的索引超出了列表范围，只需检查左子节点是否满足最小堆条件 if right_index >= len(heap_list): return heap_list[index] <= heap_list[left_index] # 检查当前节点是否小于等于其左右子节点，以及左右子节点是否满足最小堆条件 return (heap_list[index] <= heap_list[left_index] and heap_list[index] <= heap_list[right_index] and is_valid_minheap(left_index) and is_valid_minheap(right_index)) return is_valid_minheap(0)